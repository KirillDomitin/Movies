version: "3.9"

services:
  db:
    image: postgres:13
    container_name: db_postgres
    volumes:
      - ./create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - pg_volume:/var/lib/postgresql/data
    ports:
      # Если нужно прокинуть сервис типо Постгрес наружу, имеет смысл сделать отдельную переменную для внешнего порта.
      - ${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}
    # Если переменные все перечислены в environment, то .env отдельно подключать не надо, они взаимозаменяемые
    #    env_file:
    #      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_INITDB_ARGS="-A md5"

  service:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: movies_django
    depends_on:
      - db
    volumes:
      - static_volume:/opt/django_api/static/
      - media_volume:/opt/django_api/media/

    command: >
      bash -c "python manage.py collectstatic --noinput && \
      python manage.py makemigrations && \
      python manage.py migrate && \
      python init_superuser.py && \
      uwsgi --strict --ini uwsgi.ini"
    # Не забывай про переменные которые нужны проекту для старта
    environment:
      - SECRET_KEY=${SECRET_KEY}
  #      init_superuser ?

  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/opt/django_api/static/
      - media_volume:/opt/django_api/media/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/config:/etc/nginx/conf.d:ro
      - ./data:/data/:ro
    depends_on:
      - service
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"

volumes:
  media_volume:
  static_volume:
  pg_volume: